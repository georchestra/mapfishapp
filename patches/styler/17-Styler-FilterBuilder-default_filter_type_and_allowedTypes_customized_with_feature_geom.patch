Index: lib/Styler/widgets/SpatialFilterPanel.js
===================================================================
--- lib/Styler/widgets/SpatialFilterPanel.js	(révision 469)
+++ lib/Styler/widgets/SpatialFilterPanel.js	(copie de travail)
@@ -39,10 +39,24 @@
     toggleGroup: null,
 
     initComponent: function() {
+    
+        //TODO: i18n
+        var allowedTypes = [[OpenLayers.Filter.Spatial.INTERSECTS, 
+            "intersection avec"]];
+            
+        switch (this.feature.geometry.CLASS_NAME) {
+            case "OpenLayers.Geometry.Polygon":
+                allowedTypes.push([OpenLayers.Filter.Spatial.WITHIN, 
+                    "à l'intérieur de"]);
+            case "OpenLayers.Geometry.LineString":
+                allowedTypes.push([OpenLayers.Filter.Spatial.CONTAINS, 
+                    "contient l'objet"]);
+        }
         
         var defComboConfig = {
             xtype: "gx_spatialcombo",
             value: this.filter.type,
+            allowedTypes: allowedTypes,
             blankText: "Ce champ est nécessaire",
             listeners: {
                 select: function(combo, record) {
Index: lib/Styler/widgets/FilterBuilder.js
===================================================================
--- lib/Styler/widgets/FilterBuilder.js	(révision 469)
+++ lib/Styler/widgets/FilterBuilder.js	(copie de travail)
@@ -384,7 +384,8 @@
     createDefaultFilter: function(feature) {
         if(feature instanceof OpenLayers.Feature.Vector) {
             return new OpenLayers.Filter.Spatial({
-                value: feature.geometry
+                value: feature.geometry,
+                type: OpenLayers.Filter.Spatial.INTERSECTS
             });
         } else {
             return new OpenLayers.Filter.Comparison();
