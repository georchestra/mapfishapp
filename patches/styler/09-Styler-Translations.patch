Index: Styler/widgets/TextSymbolizer.js
===================================================================
--- Styler/widgets/TextSymbolizer.js	(revision 368)
+++ Styler/widgets/TextSymbolizer.js	(working copy)
@@ -49,7 +49,7 @@
 
         var defAttributesComboConfig = {
             xtype: "combo",
-            fieldLabel: "Label values",
+            fieldLabel: "Attribut",
             store: this.attributes,
             editable: false,
             triggerAction: "all",
@@ -144,7 +144,7 @@
             labelWidth: 50,
             items: [{
                 xtype: "textfield",
-                fieldLabel: "Size",
+                fieldLabel: "Taille",
                 anchor: "89%",
                 value: this.symbolizer.haloRadius,
                 listeners: {
Index: Styler/widgets/FillSymbolizer.js
===================================================================
--- Styler/widgets/FillSymbolizer.js	(revision 369)
+++ Styler/widgets/FillSymbolizer.js	(working copy)
@@ -35,14 +35,14 @@
         
         this.items = [{
             xtype: "fieldset",
-            title: "Fill",
+            title: "Remplissage",
             autoHeight: true,
             defaults: {
                 width: 100 // TODO: move to css
             },
             items: [{
                 xtype: "ext.ux.colorpicker",
-                fieldLabel: "Color",
+                fieldLabel: "Couleur",
                 name: "color",
                 value: this.symbolizer["fillColor"],
                 listeners: {
@@ -54,7 +54,7 @@
                 }
             }, {
                 xtype: "slider",
-                fieldLabel: "Opacity",
+                fieldLabel: "Opacité",
                 name: "opacity",
                 value: (this.symbolizer["fillOpacity"] == null) ? 100 : this.symbolizer["fillOpacity"] * 100,
                 isFormField: true,
Index: Styler/widgets/ScaleLimitPanel.js
===================================================================
--- Styler/widgets/ScaleLimitPanel.js	(revision 368)
+++ Styler/widgets/ScaleLimitPanel.js	(working copy)
@@ -213,7 +213,7 @@
                 items: [{
                     xtype: "checkbox",
                     checked: !!this.limitMinScale,
-                    fieldLabel: "Min scale limit",
+                    fieldLabel: "Échelle min",
                     listeners: {
                         check: function(box, checked) {
                             this.limitMinScale = checked;
@@ -239,7 +239,7 @@
                 items: [{
                     xtype: "checkbox",
                     checked: !!this.limitMaxScale,
-                    fieldLabel: "Max scale limit",
+                    fieldLabel: "Échelle max",
                     listeners: {
                         check: function(box, checked) {
                             this.limitMaxScale = checked;
@@ -362,4 +362,4 @@
     
 });
 
-Ext.reg('gx_scalelimitpanel', Styler.ScaleLimitPanel); 
\ No newline at end of file
+Ext.reg('gx_scalelimitpanel', Styler.ScaleLimitPanel); 
Index: Styler/widgets/PointSymbolizer.js
===================================================================
--- Styler/widgets/PointSymbolizer.js	(revision 368)
+++ Styler/widgets/PointSymbolizer.js	(working copy)
@@ -135,7 +135,7 @@
             items: [this.urlField, {
                 xtype: "slider",
                 name: "opacity",
-                fieldLabel: "Opacity",
+                fieldLabel: "Opacité",
                 width: 100,
                 value: (this.symbolizer["graphicOpacity"] == null) ? 100 : this.symbolizer["graphicOpacity"] * 100,
                 isFormField: true,
@@ -160,7 +160,7 @@
         this.items = [{
             xtype: "combo",
             name: "mark",
-            fieldLabel: "Symbol",
+            fieldLabel: "Symbole",
             store: new Ext.data.JsonStore({
                 data: {root: this.pointGraphics},
                 root: "root",
@@ -216,7 +216,7 @@
         }, {
             xtype: "textfield",
             name: "size",
-            fieldLabel: "Size",
+            fieldLabel: "Taille",
             value: this.symbolizer["pointRadius"],
             listeners: {
                 change: function(field, value) {
Index: Styler/widgets/StrokeSymbolizer.js
===================================================================
--- Styler/widgets/StrokeSymbolizer.js	(revision 369)
+++ Styler/widgets/StrokeSymbolizer.js	(working copy)
@@ -44,7 +44,7 @@
 
         this.items = [{
             xtype: "fieldset",
-            title: "Stroke",
+            title: "Contour",
             autoHeight: true,
             defaults: {
                 width: 100 // TODO: move to css
@@ -74,7 +74,7 @@
             }, {
                 xtype: "ext.ux.colorpicker",
                 name: "color",
-                fieldLabel: "Color",
+                fieldLabel: "Couleur",
                 value: this.symbolizer["strokeColor"],
                 listeners: {
                     valid: function(field) {
@@ -86,7 +86,7 @@
             }, {
                 xtype: "textfield",
                 name: "width",
-                fieldLabel: "Width",
+                fieldLabel: "Épaisseur",
                 value: this.symbolizer["strokeWidth"],
                 listeners: {
                     change: function(field, value) {
@@ -98,7 +98,7 @@
             }, {
                 xtype: "slider",
                 name: "opacity",
-                fieldLabel: "Opacity",
+                fieldLabel: "Opacité",
                 value: (this.symbolizer["strokeOpacity"] == null) ? 100 : this.symbolizer["strokeOpacity"] * 100,
                 isFormField: true,
                 listeners: {
Index: Styler/widgets/RulePanel.js
===================================================================
--- Styler/widgets/RulePanel.js	(revision 368)
+++ Styler/widgets/RulePanel.js	(working copy)
@@ -169,12 +169,12 @@
         });
         
         this.items = [{
-            title: "Labels",
+            title: "Libellés",
             autoScroll: true,
             bodyStyle: {"padding": "10px"},
             items: [{
                 xtype: "fieldset",
-                title: "Label Features",
+                title: "Libellés",
                 autoHeight: true,
                 checkboxToggle: true,
                 collapsed: !this.rule.symbolizer["Text"],
@@ -196,11 +196,11 @@
         }];
         if (Styler.Util.getSymbolTypeFromRule(this.rule) || this.symbolType) {
             this.items = [{
-                title: "Basic",
+                title: "Simple",
                 autoScroll: true,
                 items: [this.createHeaderPanel(), this.createSymbolizerPanel()]
             }, this.items[0], {
-                title: "Advanced",
+                title: "Avancé",
                 defaults: {
                     style: {
                         margin: "7px"
@@ -209,7 +209,7 @@
                 autoScroll: true,
                 items: [{
                     xtype: "fieldset",
-                    title: "Limit by scale",
+                    title: "Limite par échelle",
                     checkboxToggle: true,
                     collapsed: !(this.rule && (this.rule.minScaleDenominator || this.rule.maxScaleDenominator)),
                     autoHeight: true,
@@ -238,7 +238,7 @@
                     }
                 }, {
                     xtype: "fieldset",
-                    title: "Limit by condition",
+                    title: "Limite par condition",
                     checkboxToggle: true,
                     collapsed: !(this.rule && this.rule.filter),
                     autoHeight: true,
@@ -302,7 +302,7 @@
             symbolType: this.symbolType,
             symbolizer: this.rule.symbolizer[this.symbolType],
             isFormField: true,
-            fieldLabel: "Symbol"
+            fieldLabel: "Symbole"
         });
         return {
             xtype: "form",
@@ -321,7 +321,7 @@
                     width: 150,
                     items: [{
                         xtype: "textfield",
-                        fieldLabel: "Name",
+                        fieldLabel: "Nom",
                         anchor: "95%",
                         value: this.rule && (this.rule.title || this.rule.name || ""),
                         listeners: {
Index: Styler/widgets/FilterBuilder.js
===================================================================
--- Styler/widgets/FilterBuilder.js	(revision 368)
+++ Styler/widgets/FilterBuilder.js	(working copy)
@@ -5,10 +5,6 @@
 /**
  * @include Styler/widgets/FilterPanel.js
  * @include Styler/widgets/SpatialFilterPanel.js
- * @include OpenLayers/Control/DrawFeature.js
- * @include OpenLayers/Handler/Point.js
- * @include OpenLayers/Handler/Path.js
- * @include OpenLayers/Handler/Polygon.js
  */
 
 Ext.namespace("Styler");
@@ -21,7 +17,7 @@
      *     These will be the option names available in the builder type combo.
      *     Default is ["any", "all", "none", "not all"].
      */
-    builderTypeNames: ["any", "all", "none", "not all"],
+    builderTypeNames: ["une de", "toutes", "aucune de", "pas toutes"],
     
     /**
      * Property: allowedBuilderTypes
@@ -38,8 +34,8 @@
     
     customizeFilterOnInit: true,
     
-    preComboText: "Match",
-    postComboText: "of the following:",
+    preComboText: "Correspondre à",
+    postComboText: "ces conditions :",
     
     /**
      * Property: allowGroups
